  
trigger:
- master

pool:
  vmImage: 'ubuntu-20.04'

name: $(SourceBranchName)_$(Date:yyyyMMdd)_$(Hours)_$(Minutes)

steps:
- task: CmdLine@2
  inputs:
    script: 'docker run -u zap -p 8080:8080 --name ZAPTEST -i -d owasp/zap2docker-stable zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.disablekey=true -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true'
  displayName: Running ZAP Container
  
- task: Maven@3
  inputs:
    mavenPomFile: './smartHub-bdd/pom.xml'
    goals: 'clean verify -PdontUseTheForks'
    options: '-DappConfig=$(APPCONFIGPROPERTIES) -Dserenity.proxy.http="localhost" -Dserenity.proxy.http_port="8080" -Dcucumber.filter.tags="@sanity" -Dcucumber.features="src/test/resources/features"'
    publishJUnitResults: true
    testResultsFiles: './smartHub-bdd/target/site/serenity/'
    testRunTitle: 'Smart Tests'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
  displayName: Start Automated Tests
  continueOnError: true

#- task: CmdLine@2
#  inputs:
#   script: 'docker exec ZAPTEST zap-api-scan.py -t http://localhost:8080/JSON/core/view/sites/ -f openapi'
#    script: 'curl -v GET $(CURLCMD)'
#  condition: always()
#  continueOnError: true
# displayName: Executing ZAP API commands using cURL

- task: Bash@3
  inputs:
    targetType: 'inline'
    script:
      a=$(curl --trace - --trace-time -v -i GET $(CURLCMD)) && echo $a
  condition: always()
  continueOnError: true
  displayName: CURL COMMAND